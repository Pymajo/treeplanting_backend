// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using netgo.treeplanting.Infrastructure.Database;

#nullable disable

namespace netgo.treeplanting.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("netgo.treeplanting.Domain.Entities.Seedling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("TreeSpecies")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<Guid>("TreeschoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("XCoordinate")
                        .HasColumnType("int");

                    b.Property<int>("YCoordinate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreeschoolId");

                    b.ToTable("Seedling");
                });

            modelBuilder.Entity("netgo.treeplanting.Domain.Entities.Treeschool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Treeschool");
                });

            modelBuilder.Entity("netgo.treeplanting.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(125)");

                    b.Property<bool>("EmailRegistered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("PlantingOfficer")
                        .HasColumnType("bit");

                    b.Property<bool>("PollManager")
                        .HasColumnType("bit");

                    b.Property<bool>("SeedlingsManager")
                        .HasColumnType("bit");

                    b.Property<int>("Treecoins")
                        .HasColumnType("int");

                    b.Property<bool>("TreecoinsDeterminer")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("netgo.treeplanting.Domain.Entities.Seedling", b =>
                {
                    b.HasOne("netgo.treeplanting.Domain.Entities.Treeschool", "Treeschool")
                        .WithMany("Seedlings")
                        .HasForeignKey("TreeschoolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Treeschool");
                });

            modelBuilder.Entity("netgo.treeplanting.Domain.Entities.Treeschool", b =>
                {
                    b.Navigation("Seedlings");
                });
#pragma warning restore 612, 618
        }
    }
}
